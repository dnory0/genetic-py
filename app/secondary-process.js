"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var os = require("os-utils");
var timeChecker;
var timer = null;
var tempTimer = null;
var pauseTimer = null;
var accPauseTimer = [0, 0];
var sendTime = true;
function startTimeCalc() {
    timer = process.hrtime();
    timeChecker = setInterval(function () {
        if (!sendTime)
            return;
        tempTimer = process.hrtime(timer);
        tempTimer = [
            tempTimer[1] - accPauseTimer[1] < 0
                ? tempTimer[0] - accPauseTimer[0] - 1
                : tempTimer[0] - accPauseTimer[0],
            tempTimer[1] - accPauseTimer[1] < 0
                ? tempTimer[1] + 1000000000 - accPauseTimer[1]
                : tempTimer[1] - accPauseTimer[1]
        ];
        process.send("time: " + (Math.trunc(tempTimer[0] / 3600) < 10
            ? "0" + Math.trunc(tempTimer[0] / 3600)
            : "" + Math.trunc(tempTimer[0] / 3600)) + ":" + (Math.trunc((tempTimer[0] % 3600) / 60) < 10
            ? "0" + Math.trunc((tempTimer[0] % 3600) / 60)
            : "" + Math.trunc((tempTimer[0] % 3600) / 60)) + ":" + (tempTimer[0] % 60 < 10
            ? "0" + tempTimer[0] % 60
            : "" + tempTimer[0] % 60) + ":" + (tempTimer[1] < 100000000
            ? "0" + Math.trunc(tempTimer[1] / 10000000)
            : "" + Math.trunc(tempTimer[1] / 10000000)));
    }, 70);
}
function pauseTimeCalc() {
    sendTime = false;
    pauseTimer = process.hrtime();
}
function resumeTimeCalc() {
    pauseTimer = process.hrtime(pauseTimer);
    accPauseTimer = [
        1000000000 <= accPauseTimer[1] + pauseTimer[1]
            ? accPauseTimer[0] + pauseTimer[0] + 1
            : accPauseTimer[0] + pauseTimer[0],
        1000000000 < accPauseTimer[1] + pauseTimer[1]
            ? accPauseTimer[1] + pauseTimer[1] - 1000000000
            : accPauseTimer[1] + pauseTimer[1]
    ];
    sendTime = true;
}
function finishTimeCalc() {
    if (timeChecker)
        clearInterval(timeChecker);
    process.send('time-finished');
    pauseTimer = null;
    accPauseTimer = [0, 0];
    sendTime = true;
}
setInterval(function () {
    return os.cpuUsage(function (v) {
        process.send("cpuusage: " + (v < 0.1 ? "0" + Math.trunc(v * 100) : "" + Math.trunc(v * 100)));
    });
}, 1000);
process.on('message', function (message) {
    if (message.includes('start'))
        startTimeCalc();
    else if (message.includes('pause'))
        pauseTimeCalc();
    else if (message.includes('resume'))
        resumeTimeCalc();
    else if (message.includes('finish'))
        finishTimeCalc();
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2Vjb25kYXJ5LXByb2Nlc3MuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJzZWNvbmRhcnktcHJvY2Vzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQWFBLDZCQUErQjtBQUcvQixJQUFJLFdBQTJCLENBQUM7QUFFaEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDO0FBRWpCLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQztBQUVyQixJQUFJLFVBQVUsR0FBRyxJQUFJLENBQUM7QUFFdEIsSUFBSSxhQUFhLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7QUFHM0IsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDO0FBTXBCLFNBQVMsYUFBYTtJQUNwQixLQUFLLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3pCLFdBQVcsR0FBRyxXQUFXLENBQUM7UUFDeEIsSUFBSSxDQUFDLFFBQVE7WUFBRSxPQUFPO1FBQ3RCLFNBQVMsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2xDLFNBQVMsR0FBRztZQUNWLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztnQkFDakMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztnQkFDckMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDO1lBQ25DLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQztnQkFDakMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLEdBQUcsYUFBYSxDQUFDLENBQUMsQ0FBQztnQkFDOUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsR0FBRyxhQUFhLENBQUMsQ0FBQyxDQUFDO1NB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